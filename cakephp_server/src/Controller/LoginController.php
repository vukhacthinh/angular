<?php
namespace App\Controller;
require_once(ROOT . DS . 'vendor' . DS . 'mobiledetect' .DS.'mobiledetectlib'. DS . 'Mobile_Detect.php');

use App\Lib\Message;
use Cake\Auth\DefaultPasswordHasher;
use Cake\Controller\Component\AuthComponent;
use Cake\Log\Log;
use Cake\ORM\Query;
use Cake\ORM\TableRegistry;
use Cake\I18n\Time;
use App\Model\Entity\Employee;

/**
 * Login controller
 *
 * @property \App\Model\Table\EmployeesTable $Employees
 * @method \App\Model\Entity\Employee[]|\Cake\Datasource\ResultSetInterface paginate($object = null, array $settings = [])
 */

class LoginController extends AppController
{
    /**
     * @var \Cake\Datasource\RepositoryInterface|null
     */

    public function initialize(): void
    {
        parent::initialize(); // TODO: Change the autogenerated stub
        $this->loadModel('Employees');
        $this->viewBuilder()->disableAutoLayout();
    }

    /**
     *
     */
    public function index()
    {
        if ($this->request->is('post')) {
            $params = $this->request->getData();

            $abc = new DefaultPasswordHasher();
            $employeeLoginGet = $this->Employees->find()->where(['employee_code'=>$params['username']]);
            $response = $abc->check($params['password'],$employeeLoginGet->first()->password);
            if($response){
                return $this->responseJson($employeeLoginGet);
            }
            else{
                return false;
            }
        }
    }
    /**
     * Write login log if CST_LOGIN_LOG==1
     *
     * @param $result: 1=>SUCCESS, 2=>FAILURE, 3=>LOCKOUT
     * @return not return
     */
    public function writeLoginLog($login_name, $result)
    {
        if (CST_LOGIN_LOG == 1)
        {
            $currentDate = date("Y-m-d H:i:s");
            $IP = $this->request->clientIp();
            $rs = '';
            switch ($result) {
                case '1':
                    $rs = "SUCCESS";
                    break;
                case '2':
                    $rs = "FAILURE";
                    break;
                case '3':
                    $rs = "LOCKOUT";
                    break;
            }
            $content = <<<HD

	システム日時:  {$currentDate}
	アクセス元IPアドレス:  {$IP}
	区分:  LOGIN
	ログインID:  {$login_name}
	ログインチェック結果:  {$rs}
HD;
            Log::info($content, 'login');
        }
    }


}

